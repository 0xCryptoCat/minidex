{
    "sourceFile": "src/features/chart/DetailTop.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1755347748705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755352612660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+import { useState } from 'react';\n+import { ExpandMore as ExpandMoreIcon, KeyboardArrowDown as ArrowDownIcon } from '@mui/icons-material';\n+import type { PoolSummary, TokenResponse } from '../../lib/types';\n+\n+interface Props {\n+  detail: TokenResponse;\n+  pairId: string;\n+  pools: PoolSummary[];\n+  chain: string;\n+  onPoolSwitch: (p: PoolSummary) => void;\n+}\n+\n+export default function DetailTop({ detail, pairId, pools, chain, onPoolSwitch }: Props) {\n+  const [descExpanded, setDescExpanded] = useState(false);\n+  \n+  const active = detail.pools.find((p) => p.pairId === pairId) || detail.pools[0];\n+  const info = detail.info || {};\n+\n+  return (\n+    <>\n+      {/* Header Image */}\n+      {info.header && (\n+        <div className=\"detail-header-wrap\">\n+          <img src={info.header} alt=\"\" className=\"detail-header\" loading=\"lazy\" />\n+        </div>\n+      )}\n+      \n+      {/* Main Detail Section */}\n+      <div className=\"detail-top\">\n+        <div className=\"detail-avatar\">\n+          {info.imageUrl ? \n+            <img src={info.imageUrl} alt={`${active.baseToken.symbol} logo`} /> : \n+            <div className=\"detail-letter\">{active.baseToken.symbol?.[0]}</div>\n+          }\n+        </div>\n+        \n+        <div className=\"detail-overview\">\n+          <div className=\"detail-title\">\n+            <div style={{ display: 'flex', alignItems: 'center', gap: 'var(--space-2)' }}>\n+              <strong style={{ fontSize: '1.25rem', fontWeight: 700 }}>\n+                {active.baseToken.symbol} / {active.quoteToken.symbol}\n+              </strong>\n+              \n+              {/* Pool Selector Dropdown */}\n+              {pools.length > 1 && (\n+                <select\n+                  value={pairId}\n+                  onChange={(e) => {\n+                    const sel = pools.find((p) => p.pairId === e.target.value);\n+                    if (sel) onPoolSwitch(sel);\n+                  }}\n+                  className=\"pool-selector\"\n+                >\n+                  {pools.map((p) => (\n+                    <option key={p.pairId} value={p.pairId}>\n+                      {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n+                      {p.gtSupported === false ? ' — Limited' : ''}\n+                    </option>\n+                  ))}\n+                </select>\n+              )}\n+            </div>\n+          </div>\n+          \n+          <div className=\"detail-subline\">\n+            <span className=\"token-name\">{active.baseToken.name}</span>\n+            <span className=\"badge chain-badge\">{chain}</span>\n+            <span className=\"badge provider-badge\">{detail.provider}</span>\n+            {active.gtSupported === false && <span className=\"badge limited-badge\">Limited</span>}\n+          </div>\n+          \n+          {info.description && (\n+            <div className=\"detail-desc\">\n+              {descExpanded ? info.description : info.description.slice(0, 300)}\n+              {info.description.length > 300 && !descExpanded && (\n+                <button \n+                  className=\"detail-more\" \n+                  onClick={() => setDescExpanded(true)}\n+                >\n+                  More <ExpandMoreIcon sx={{ fontSize: 16 }} />\n+                </button>\n+              )}\n+            </div>\n+          )}\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1755352922498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,23 +42,26 @@\n               </strong>\n               \n               {/* Pool Selector Dropdown */}\n               {pools.length > 1 && (\n-                <select\n-                  value={pairId}\n-                  onChange={(e) => {\n-                    const sel = pools.find((p) => p.pairId === e.target.value);\n-                    if (sel) onPoolSwitch(sel);\n-                  }}\n-                  className=\"pool-selector\"\n-                >\n-                  {pools.map((p) => (\n-                    <option key={p.pairId} value={p.pairId}>\n-                      {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n-                      {p.gtSupported === false ? ' — Limited' : ''}\n-                    </option>\n-                  ))}\n-                </select>\n+                <div className=\"pool-selector-wrapper\">\n+                  <select\n+                    value={pairId}\n+                    onChange={(e) => {\n+                      const sel = pools.find((p) => p.pairId === e.target.value);\n+                      if (sel) onPoolSwitch(sel);\n+                    }}\n+                    className=\"pool-selector\"\n+                  >\n+                    {pools.map((p) => (\n+                      <option key={p.pairId} value={p.pairId}>\n+                        {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n+                        {p.gtSupported === false ? ' — Limited' : ''}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  <ArrowDownIcon className=\"pool-selector-arrow\" />\n+                </div>\n               )}\n             </div>\n           </div>\n           \n@@ -86,93 +89,4 @@\n       </div>\n     </>\n   );\n }\n-import { useState } from 'react';\n-import { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\n-import type { PoolSummary, TokenResponse } from '../../lib/types';\n-\n-interface Props {\n-  detail: TokenResponse;\n-  pairId: string;\n-  pools: PoolSummary[];\n-  chain: string;\n-  onPoolSwitch: (p: PoolSummary) => void;\n-}\n-\n-export default function DetailTop({ detail, pairId, pools, chain, onPoolSwitch }: Props) {\n-  const [descExpanded, setDescExpanded] = useState(false);\n-  \n-  const active = detail.pools.find((p) => p.pairId === pairId) || detail.pools[0];\n-  const info = detail.info || {};\n-\n-  return (\n-    <>\n-      {/* Header Image */}\n-      {info.header && (\n-        <div className=\"detail-header-wrap\">\n-          <img src={info.header} alt=\"\" className=\"detail-header\" loading=\"lazy\" />\n-        </div>\n-      )}\n-      \n-      {/* Main Detail Section */}\n-      <div className=\"detail-top\">\n-        <div className=\"detail-avatar\">\n-          {info.imageUrl ? \n-            <img src={info.imageUrl} alt={`${active.baseToken.symbol} logo`} /> : \n-            <div className=\"detail-letter\">{active.baseToken.symbol?.[0]}</div>\n-          }\n-        </div>\n-        \n-        <div className=\"detail-overview\">\n-          <div className=\"detail-title\">\n-            <div style={{ display: 'flex', alignItems: 'center', gap: 'var(--space-2)' }}>\n-              <strong style={{ fontSize: '1.25rem', fontWeight: 700 }}>\n-                {active.baseToken.symbol} / {active.quoteToken.symbol}\n-              </strong>\n-              \n-              {/* Pool Selector Dropdown */}\n-              {pools.length > 1 && (\n-                <select\n-                  value={pairId}\n-                  onChange={(e) => {\n-                    const sel = pools.find((p) => p.pairId === e.target.value);\n-                    if (sel) onPoolSwitch(sel);\n-                  }}\n-                  className=\"pool-selector\"\n-                >\n-                  {pools.map((p) => (\n-                    <option key={p.pairId} value={p.pairId}>\n-                      {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n-                      {p.gtSupported === false ? ' — Limited' : ''}\n-                    </option>\n-                  ))}\n-                </select>\n-              )}\n-            </div>\n-          </div>\n-          \n-          <div className=\"detail-subline\">\n-            <span className=\"token-name\">{active.baseToken.name}</span>\n-            <span className=\"badge chain-badge\">{chain}</span>\n-            <span className=\"badge provider-badge\">{detail.provider}</span>\n-            {active.gtSupported === false && <span className=\"badge limited-badge\">Limited</span>}\n-          </div>\n-          \n-          {info.description && (\n-            <div className=\"detail-desc\">\n-              {descExpanded ? info.description : info.description.slice(0, 300)}\n-              {info.description.length > 300 && !descExpanded && (\n-                <button \n-                  className=\"detail-more\" \n-                  onClick={() => setDescExpanded(true)}\n-                >\n-                  More <ExpandMoreIcon sx={{ fontSize: 16 }} />\n-                </button>\n-              )}\n-            </div>\n-          )}\n-        </div>\n-      </div>\n-    </>\n-  );\n-}\n"
                }
            ],
            "date": 1755347748705,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\nimport type { PoolSummary, TokenResponse } from '../../lib/types';\n\ninterface Props {\n  detail: TokenResponse;\n  pairId: string;\n  pools: PoolSummary[];\n  chain: string;\n  onPoolSwitch: (p: PoolSummary) => void;\n}\n\nexport default function DetailTop({ detail, pairId, pools, chain, onPoolSwitch }: Props) {\n  const [descExpanded, setDescExpanded] = useState(false);\n  \n  const active = detail.pools.find((p) => p.pairId === pairId) || detail.pools[0];\n  const info = detail.info || {};\n\n  return (\n    <>\n      {/* Header Image */}\n      {info.header && (\n        <div className=\"detail-header-wrap\">\n          <img src={info.header} alt=\"\" className=\"detail-header\" loading=\"lazy\" />\n        </div>\n      )}\n      \n      {/* Main Detail Section */}\n      <div className=\"detail-top\">\n        <div className=\"detail-avatar\">\n          {info.imageUrl ? \n            <img src={info.imageUrl} alt={`${active.baseToken.symbol} logo`} /> : \n            <div className=\"detail-letter\">{active.baseToken.symbol?.[0]}</div>\n          }\n        </div>\n        \n        <div className=\"detail-overview\">\n          <div className=\"detail-title\">\n            <div style={{ display: 'flex', alignItems: 'center', gap: 'var(--space-2)' }}>\n              <strong style={{ fontSize: '1.25rem', fontWeight: 700 }}>\n                {active.baseToken.symbol} / {active.quoteToken.symbol}\n              </strong>\n              \n              {/* Pool Selector Dropdown */}\n              {pools.length > 1 && (\n                <select\n                  value={pairId}\n                  onChange={(e) => {\n                    const sel = pools.find((p) => p.pairId === e.target.value);\n                    if (sel) onPoolSwitch(sel);\n                  }}\n                  className=\"pool-selector\"\n                >\n                  {pools.map((p) => (\n                    <option key={p.pairId} value={p.pairId}>\n                      {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n                      {p.gtSupported === false ? ' — Limited' : ''}\n                    </option>\n                  ))}\n                </select>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"detail-subline\">\n            <span className=\"token-name\">{active.baseToken.name}</span>\n            <span className=\"badge chain-badge\">{chain}</span>\n            <span className=\"badge provider-badge\">{detail.provider}</span>\n            {active.gtSupported === false && <span className=\"badge limited-badge\">Limited</span>}\n          </div>\n          \n          {info.description && (\n            <div className=\"detail-desc\">\n              {descExpanded ? info.description : info.description.slice(0, 300)}\n              {info.description.length > 300 && !descExpanded && (\n                <button \n                  className=\"detail-more\" \n                  onClick={() => setDescExpanded(true)}\n                >\n                  More <ExpandMoreIcon sx={{ fontSize: 16 }} />\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"
        }
    ]
}