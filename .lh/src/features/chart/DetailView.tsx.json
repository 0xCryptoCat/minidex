{
    "sourceFile": "src/features/chart/DetailView.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1755347748704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755352922486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,31 +149,26 @@\n                   </strong>\n                   \n                   {/* Pool Selector Dropdown */}\n                   {pools.length > 1 && (\n-                    <select\n-                      value={pairId}\n-                      onChange={(e) => {\n-                        const sel = pools.find((p) => p.pairId === e.target.value);\n-                        if (sel) onSwitch(sel);\n-                      }}\n-                      style={{\n-                        background: 'var(--bg-input)',\n-                        border: '1px solid var(--border)',\n-                        borderRadius: 'var(--radius-small)',\n-                        color: 'var(--text)',\n-                        padding: 'var(--space-1) var(--space-2)',\n-                        fontSize: '0.875rem',\n-                        cursor: 'pointer',\n-                      }}\n-                    >\n-                      {pools.map((p) => (\n-                        <option key={p.pairId} value={p.pairId}>\n-                          {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n-                          {p.gtSupported === false ? ' — Limited' : ''}\n-                        </option>\n-                      ))}\n-                    </select>\n+                    <div className=\"pool-selector-wrapper\">\n+                      <select\n+                        value={pairId}\n+                        onChange={(e) => {\n+                          const sel = pools.find((p) => p.pairId === e.target.value);\n+                          if (sel) onSwitch(sel);\n+                        }}\n+                        className=\"pool-selector\"\n+                      >\n+                        {pools.map((p) => (\n+                          <option key={p.pairId} value={p.pairId}>\n+                            {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n+                            {p.gtSupported === false ? ' — Limited' : ''}\n+                          </option>\n+                        ))}\n+                      </select>\n+                      <ExpandMoreIcon className=\"pool-selector-arrow\" />\n+                    </div>\n                   )}\n                 </div>\n               </div>\n               \n"
                },
                {
                    "date": 1755356506680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { Fragment, useEffect, useState } from 'react';\n import type { PoolSummary, TokenResponse } from '../../lib/types';\n import { token as fetchToken } from '../../lib/api';\n-import { formatUsd, formatCompact } from '../../lib/format';\n+import { formatUsd, formatCompact, formatShortAddr } from '../../lib/format';\n import CopyButton from '../../components/CopyButton';\n import { addressUrl } from '../../lib/explorer';\n import { \n   Language as WebsiteIcon,\n@@ -252,9 +252,9 @@\n         {active.pairAddress && (\n           <div className=\"addr-row\">\n             <span>Pair:</span>\n             <div>\n-              <code>{active.pairAddress}</code>\n+              <code>{formatShortAddr(active.pairAddress)}</code>\n               <CopyButton text={active.pairAddress} label=\"pair address\" />\n               {pairExplorer && (\n                 <a href={pairExplorer} target=\"_blank\" rel=\"noopener noreferrer\">\n                   <OpenInNewIcon sx={{ fontSize: 16 }} />\n@@ -265,9 +265,9 @@\n         )}\n         <div className=\"addr-row\">\n           <span>{active.baseToken.symbol}:</span>\n           <div>\n-            <code>{active.baseToken.address}</code>\n+            <code>{formatShortAddr(active.baseToken.address)}</code>\n             <CopyButton text={active.baseToken.address} label={`${active.baseToken.symbol} address`} />\n             {baseExplorer && (\n               <a href={baseExplorer} target=\"_blank\" rel=\"noopener noreferrer\">\n                 <OpenInNewIcon sx={{ fontSize: 16 }} />\n"
                }
            ],
            "date": 1755347748704,
            "name": "Commit-0",
            "content": "import { Fragment, useEffect, useState } from 'react';\nimport type { PoolSummary, TokenResponse } from '../../lib/types';\nimport { token as fetchToken } from '../../lib/api';\nimport { formatUsd, formatCompact } from '../../lib/format';\nimport CopyButton from '../../components/CopyButton';\nimport { addressUrl } from '../../lib/explorer';\nimport { \n  Language as WebsiteIcon,\n  Description as DocsIcon,\n  Twitter as TwitterIcon,\n  Telegram as TelegramIcon,\n  GitHub as GitHubIcon,\n  Instagram as InstagramIcon,\n  Facebook as FacebookIcon,\n  OpenInNew as OpenInNewIcon,\n  ExpandMore as ExpandMoreIcon,\n} from '@mui/icons-material';\nimport '../../styles/detail.css';\n\ninterface Props {\n  chain: string;\n  address: string;\n  pairId: string;\n  pools: PoolSummary[];\n  onSwitch: (p: PoolSummary) => void;\n  hideDetailTop?: boolean;\n}\n\nconst LINK_ICONS: Record<string, any> = {\n  website: WebsiteIcon,\n  docs: DocsIcon,\n  whitepaper: DocsIcon,\n  twitter: TwitterIcon,\n  x: TwitterIcon,\n  telegram: TelegramIcon,\n  discord: TelegramIcon, // Using telegram icon as fallback\n  github: GitHubIcon,\n  instagram: InstagramIcon,\n  facebook: FacebookIcon,\n};\n\nexport default function DetailView({ chain, address, pairId, pools, onSwitch, hideDetailTop = false }: Props) {\n  const [detail, setDetail] = useState<TokenResponse | null>(null);\n  const [descExpanded, setDescExpanded] = useState(false);\n\n  useEffect(() => {\n    let cancelled = false;\n    fetchToken(chain, address).then(({ data }) => {\n      if (cancelled) return;\n      if (!('error' in data)) setDetail(data);\n    });\n    return () => {\n      cancelled = true;\n    };\n  }, [chain, address]);\n\n  if (!detail) return (\n    <div className=\"detail\">\n      <div className=\"loading-skeleton\" style={{ height: 200, marginBottom: 'var(--space-4)' }} />\n      <div className=\"loading-skeleton\" style={{ height: 100 }} />\n    </div>\n  );\n\n  const active = detail.pools.find((p) => p.pairId === pairId) || detail.pools[0];\n  const info = detail.info || {};\n  const kpis = {\n    priceUsd: active.priceUsd,\n    priceNative: active.priceNative,\n    liqUsd: active.liquidity?.usd,\n    fdvUsd: active.fdv,\n    mcUsd: active.marketCap,\n    priceChange24hPct: active.priceChange?.h24,\n  };\n\n  const fmtUsdOrDash = (v?: number) => (v !== undefined ? formatUsd(v) : '—');\n  const fmtPct = (v?: number) => (v !== undefined ? `${v.toFixed(2)}%` : '—');\n  const fmtCompactOrDash = (v?: number) => (v !== undefined ? formatCompact(v) : '—');\n\n  const renderPriceChanges = (pc?: { m5?: number; h1?: number; h6?: number; h24?: number }) =>\n    ['m5', 'h1', 'h6', 'h24'].map((k, i) => (\n      <Fragment key={k}>\n        <span\n          className={\n            pc?.[k as keyof typeof pc] !== undefined\n              ? pc![k as keyof typeof pc]! < 0\n                ? 'neg'\n                : 'pos'\n              : undefined\n          }\n        >\n          {fmtPct(pc?.[k as keyof typeof pc])}\n        </span>\n        {i < 3 && ' | '}\n      </Fragment>\n    ));\n\n  const renderTxns = (tx?: { h24?: { buys: number; sells: number } }) => {\n    const h24 = tx?.h24;\n    if (!h24) return '—';\n    const total = h24.buys + h24.sells;\n    return `${total} | ${h24.buys} — ${h24.sells}`;\n  };\n\n  const renderVolume = (v?: { m5?: number; h1?: number; h6?: number; h24?: number }) =>\n    ['m5', 'h1', 'h6', 'h24'].map((k, i) => (\n      <Fragment key={k}>\n        {fmtCompactOrDash(v?.[k as keyof typeof v])}\n        {i < 3 && ' | '}\n      </Fragment>\n    ));\n\n  const linkItems: { key: string; url: string }[] = [];\n  info.websites?.forEach((w) => linkItems.push({ key: (w.label || 'website').toLowerCase(), url: w.url }));\n  info.socials?.forEach((s) => linkItems.push({ key: (s.type || '').toLowerCase(), url: s.url }));\n\n  const pairExplorer = active.pairAddress\n    ? addressUrl(chain as any, active.pairAddress)\n    : undefined;\n  const baseExplorer = addressUrl(chain as any, active.baseToken.address as any);\n  const quoteExplorer = addressUrl(chain as any, active.quoteToken.address as any);\n\n  const otherPools = detail.pools.filter((p) => p.pairId !== active.pairId);\n\n  return (\n    <div className=\"detail animate-in\">\n      {/* Header Image and Detail Top - only if not hidden */}\n      {!hideDetailTop && (\n        <>\n          {info.header && (\n            <div className=\"detail-header-wrap\">\n              <img src={info.header} alt=\"\" className=\"detail-header\" loading=\"lazy\" />\n            </div>\n          )}\n          \n          {/* Main Detail Section */}\n          <div className=\"detail-top\">\n            <div className=\"detail-avatar\">\n              {info.imageUrl ? \n                <img src={info.imageUrl} alt={`${active.baseToken.symbol} logo`} /> : \n                <div className=\"detail-letter\">{active.baseToken.symbol?.[0]}</div>\n              }\n            </div>\n            \n            <div className=\"detail-overview\">\n              <div className=\"detail-title\">\n                <div style={{ display: 'flex', alignItems: 'center', gap: 'var(--space-2)' }}>\n                  <strong style={{ fontSize: '1.25rem', fontWeight: 700 }}>\n                    {active.baseToken.symbol} / {active.quoteToken.symbol}\n                  </strong>\n                  \n                  {/* Pool Selector Dropdown */}\n                  {pools.length > 1 && (\n                    <select\n                      value={pairId}\n                      onChange={(e) => {\n                        const sel = pools.find((p) => p.pairId === e.target.value);\n                        if (sel) onSwitch(sel);\n                      }}\n                      style={{\n                        background: 'var(--bg-input)',\n                        border: '1px solid var(--border)',\n                        borderRadius: 'var(--radius-small)',\n                        color: 'var(--text)',\n                        padding: 'var(--space-1) var(--space-2)',\n                        fontSize: '0.875rem',\n                        cursor: 'pointer',\n                      }}\n                    >\n                      {pools.map((p) => (\n                        <option key={p.pairId} value={p.pairId}>\n                          {p.dex} {p.version ? `(${p.version})` : ''} — {p.base}/{p.quote}\n                          {p.gtSupported === false ? ' — Limited' : ''}\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"detail-subline\">\n                <span style={{ color: 'var(--text-secondary)' }}>{active.baseToken.name}</span>\n                <span className=\"badge\">{chain}</span>\n                <span className=\"badge\">{detail.provider}</span>\n                {active.gtSupported === false && <span className=\"badge limited\">Limited</span>}\n              </div>\n              \n              {info.description && (\n                <div className=\"detail-desc\">\n                  {descExpanded ? info.description : info.description.slice(0, 300)}\n                  {info.description.length > 300 && !descExpanded && (\n                    <button \n                      className=\"detail-more\" \n                      onClick={() => setDescExpanded(true)}\n                      style={{\n                        marginLeft: 'var(--space-2)',\n                        background: 'none',\n                        border: 'none',\n                        color: 'var(--telegram-blue)',\n                        cursor: 'pointer',\n                        fontWeight: 500,\n                      }}\n                    >\n                      More <ExpandMoreIcon sx={{ fontSize: 16 }} />\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* KPIs Grid */}\n      <div className=\"detail-kpis\">\n        <div className=\"kpi-item\">\n          <span>Price USD</span>\n          <strong>{fmtUsdOrDash(kpis.priceUsd)}</strong>\n        </div>\n        <div className=\"kpi-item\">\n          <span>Price {active.quoteToken.symbol}</span>\n          <strong>{fmtUsdOrDash(kpis.priceNative)}</strong>\n        </div>\n        <div className=\"kpi-item\">\n          <span>Liquidity</span>\n          <strong>{fmtUsdOrDash(kpis.liqUsd)}</strong>\n        </div>\n        <div className=\"kpi-item\">\n          <span>FDV</span>\n          <strong>{fmtUsdOrDash(kpis.fdvUsd)}</strong>\n        </div>\n        <div className=\"kpi-item\">\n          <span>Market Cap</span>\n          <strong>{fmtUsdOrDash(kpis.mcUsd)}</strong>\n        </div>\n        <div className=\"kpi-item\">\n          <span>24h Change</span>\n          <strong className={kpis.priceChange24hPct !== undefined ? (kpis.priceChange24hPct < 0 ? 'neg' : 'pos') : undefined}>\n            {fmtPct(kpis.priceChange24hPct)}\n          </strong>\n        </div>\n        <div className=\"kpi-item kpi-wide\">\n          <span>Price Changes (5m | 1h | 6h | 24h)</span>\n          <strong>{renderPriceChanges(active.priceChange)}</strong>\n        </div>\n        <div className=\"kpi-item kpi-wide\">\n          <span>Transactions (Total | Buys — Sells)</span>\n          <strong>{renderTxns(active.txns)}</strong>\n        </div>\n        <div className=\"kpi-item kpi-wide\">\n          <span>Volume (5m | 1h | 6h | 24h)</span>\n          <strong>{renderVolume(active.volume)}</strong>\n        </div>\n      </div>\n\n      {/* Addresses */}\n      <div className=\"detail-addrs\">\n        {active.pairAddress && (\n          <div className=\"addr-row\">\n            <span>Pair:</span>\n            <div>\n              <code>{active.pairAddress}</code>\n              <CopyButton text={active.pairAddress} label=\"pair address\" />\n              {pairExplorer && (\n                <a href={pairExplorer} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <OpenInNewIcon sx={{ fontSize: 16 }} />\n                </a>\n              )}\n            </div>\n          </div>\n        )}\n        <div className=\"addr-row\">\n          <span>{active.baseToken.symbol}:</span>\n          <div>\n            <code>{active.baseToken.address}</code>\n            <CopyButton text={active.baseToken.address} label={`${active.baseToken.symbol} address`} />\n            {baseExplorer && (\n              <a href={baseExplorer} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewIcon sx={{ fontSize: 16 }} />\n              </a>\n            )}\n          </div>\n        </div>\n        <div className=\"addr-row\">\n          <span>{active.quoteToken.symbol}:</span>\n          <div>\n            <code>{active.quoteToken.address}</code>\n            <CopyButton text={active.quoteToken.address} label={`${active.quoteToken.symbol} address`} />\n            {quoteExplorer && (\n              <a href={quoteExplorer} target=\"_blank\" rel=\"noopener noreferrer\">\n                <OpenInNewIcon sx={{ fontSize: 16 }} />\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Project Links */}\n      {linkItems.length > 0 && (\n        <div className=\"detail-links\">\n          {linkItems.map((l, i) => {\n            const IconComponent = LINK_ICONS[l.key] || WebsiteIcon;\n            return (\n              <a key={i} href={l.url} target=\"_blank\" rel=\"noopener noreferrer\" title={l.key}>\n                <IconComponent sx={{ fontSize: 20 }} />\n              </a>\n            );\n          })}\n        </div>\n      )}\n\n      {/* Other Pools */}\n      {otherPools.length > 0 && (\n        <div className=\"detail-pools\">\n          <h3 style={{ \n            fontSize: '1rem', \n            fontWeight: 600, \n            margin: '0 0 var(--space-3) 0',\n            color: 'var(--text-secondary)',\n          }}>\n            Other Pools\n          </h3>\n          {otherPools.slice(0, 3).map((p) => (\n            <details key={p.pairId} className=\"pool-item\">\n              <summary>\n                <div style={{ display: 'flex', alignItems: 'center', gap: 'var(--space-2)' }}>\n                  <span style={{ fontWeight: 600 }}>\n                    {p.dex} {p.version && `(${p.version})`}\n                  </span>\n                  <span>—</span>\n                  <span>{p.baseToken.symbol}/{p.quoteToken.symbol}</span>\n                  <span>—</span>\n                  <span style={{ color: 'var(--text-muted)' }}>\n                    Liq ${p.liquidity?.usd ? formatCompact(p.liquidity.usd) : '—'}\n                  </span>\n                  {!p.gtSupported && <span className=\"badge limited\">Limited</span>}\n                </div>\n              </summary>\n              <div className=\"pool-body\">\n                <div className=\"pool-switcher\">\n                  <button \n                    onClick={() => onSwitch(p)}\n                    className=\"btn-secondary\"\n                    style={{ marginTop: 'var(--space-2)' }}\n                  >\n                    Switch to this pool\n                  </button>\n                </div>\n              </div>\n            </details>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"
        }
    ]
}