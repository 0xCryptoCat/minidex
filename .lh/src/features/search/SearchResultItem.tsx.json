{
    "sourceFile": "src/features/search/SearchResultItem.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1755352612658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755457304620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { useNavigate } from 'react-router-dom';\n import type { SearchTokenSummary, PoolSummary } from '../../lib/types';\n import { formatUsd } from '../../lib/format';\n-import { CHAIN_TO_ICON } from '../../lib/chains';\n+import { getChainIcon, getDexIcon } from '../../lib/icons';\n \n interface Props { result: SearchTokenSummary }\n \n export function SearchResultSkeleton() {\n@@ -36,8 +36,15 @@\n     pools,\n     provider,\n   } = result;\n   const displayedChains = (chainIcons || []).slice(0, 3);\n+  \n+  // Get unique DEXes from pools for display\n+  const uniqueDexes = Array.from(new Set(\n+    (pools || [])\n+      .map(p => p.dex)\n+      .filter(Boolean)\n+  )).slice(0, 3);\n \n   const supportedPool = (pools || []).reduce<PoolSummary | undefined>((acc, p) => {\n     if (p.gtSupported) {\n       if (!acc || (p.liqUsd || 0) > (acc.liqUsd || 0)) return p;\n@@ -111,10 +118,9 @@\n       </td>\n       <td className=\"chains-cell\">\n         <div className=\"chain-icons\" title={(chainIcons || []).join(', ')}>\n           {displayedChains.map((c, i) => {\n-            const url = CHAIN_TO_ICON[c];\n-            if (!url) return null;\n+            const url = getChainIcon(c);\n             return (\n               <img\n                 key={c}\n                 src={url}\n@@ -130,9 +136,27 @@\n         </div>\n       </td>\n       <td className=\"meta-cell\">\n         <div className=\"meta-info\">\n-          <span className=\"pool-count-chip\">{poolCount} pools</span>\n+          <span className=\"pool-count-chip\">{poolCount} pool{poolCount !== 1 ? 's' : ''}</span>\n+          {uniqueDexes.length > 0 && (\n+            <div className=\"dex-icons\">\n+              {uniqueDexes.map(dex => (\n+                <img \n+                  key={dex}\n+                  src={getDexIcon(dex)} \n+                  alt={dex}\n+                  className=\"dex-icon\"\n+                  title={dex}\n+                />\n+              ))}\n+              {(pools || []).length > uniqueDexes.length && (\n+                <span className=\"dex-more\" title={`${(pools || []).length - uniqueDexes.length} more DEXes`}>\n+                  +{(pools || []).length - uniqueDexes.length}\n+                </span>\n+              )}\n+            </div>\n+          )}\n           <span className=\"provider-badge\" title={`Data provider: ${provider}`}>\n             {provider}\n           </span>\n         </div>\n"
                },
                {
                    "date": 1755458628603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,18 +138,48 @@\n       <td className=\"meta-cell\">\n         <div className=\"meta-info\">\n           <span className=\"pool-count-chip\">{poolCount} pool{poolCount !== 1 ? 's' : ''}</span>\n           {uniqueDexes.length > 0 && (\n-            <div className=\"dex-icons\">\n+            <div className=\"dex-icons\" title={`DEXes: ${uniqueDexes.join(', ')}`}>\n               {uniqueDexes.map(dex => (\n                 <img \n                   key={dex}\n                   src={getDexIcon(dex)} \n                   alt={dex}\n                   className=\"dex-icon\"\n                   title={dex}\n+                  onError={(e) => {\n+                    // Fallback to first character if icon fails to load\n+                    e.currentTarget.style.display = 'none';\n+                    const fallback = e.currentTarget.nextElementSibling as HTMLElement;\n+                    if (fallback && fallback.classList.contains('dex-fallback')) {\n+                      fallback.style.display = 'inline-block';\n+                    }\n+                  }}\n                 />\n               ))}\n+              {uniqueDexes.map(dex => (\n+                <span \n+                  key={`${dex}-fallback`}\n+                  className=\"dex-fallback\"\n+                  style={{\n+                    display: 'none',\n+                    width: '16px',\n+                    height: '16px',\n+                    borderRadius: '50%',\n+                    background: 'var(--accent-telegram)',\n+                    color: 'white',\n+                    fontSize: '8px',\n+                    alignItems: 'center',\n+                    justifyContent: 'center',\n+                    fontWeight: 600,\n+                    textTransform: 'uppercase'\n+                  }}\n+                  title={dex}\n+                >\n+                  {dex[0]}\n+                </span>\n+              ))}\n               {(pools || []).length > uniqueDexes.length && (\n                 <span className=\"dex-more\" title={`${(pools || []).length - uniqueDexes.length} more DEXes`}>\n                   +{(pools || []).length - uniqueDexes.length}\n                 </span>\n"
                }
            ],
            "date": 1755352612658,
            "name": "Commit-0",
            "content": "import { useNavigate } from 'react-router-dom';\nimport type { SearchTokenSummary, PoolSummary } from '../../lib/types';\nimport { formatUsd } from '../../lib/format';\nimport { CHAIN_TO_ICON } from '../../lib/chains';\n\ninterface Props { result: SearchTokenSummary }\n\nexport function SearchResultSkeleton() {\n  return (\n    <tr style={{ display: 'grid', gridTemplateColumns: 'repeat(7, minmax(0, 1fr))', minHeight: 40 }}>\n      <td>\n        <div style={{ width: 24, height: 24, background: 'var(--bg-elev)', borderRadius: 4 }} />\n      </td>\n      {Array.from({ length: 6 }).map((_, i) => (\n        <td key={i}>\n          <div style={{ height: 16, background: 'var(--bg-elev)', borderRadius: 4 }} />\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nexport default function SearchResultItem({ result }: Props) {\n  const navigate = useNavigate();\n  const {\n    address,\n    symbol,\n    name,\n    icon,\n    priceUsd,\n    liqUsd,\n    vol24hUsd,\n    chainIcons,\n    chainCount,\n    poolCount,\n    pools,\n    provider,\n  } = result;\n  const displayedChains = (chainIcons || []).slice(0, 3);\n\n  const supportedPool = (pools || []).reduce<PoolSummary | undefined>((acc, p) => {\n    if (p.gtSupported) {\n      if (!acc || (p.liqUsd || 0) > (acc.liqUsd || 0)) return p;\n    }\n    return acc;\n  }, undefined);\n  const fallbackPool = (pools || []).reduce<PoolSummary | undefined>((acc, p) => {\n    if (!acc || (p.liqUsd || 0) > (acc.liqUsd || 0)) return p;\n    return acc;\n  }, undefined);\n  const targetPool = supportedPool || fallbackPool;\n  const isSupported = pools?.some((p) => p.gtSupported);\n\n  function handleClick() {\n    const pairId = targetPool?.pairId;\n    if (pairId) {\n      navigate(\n        `/t/${targetPool?.chain}/${address}/${pairId}?poolAddress=${\n          targetPool?.poolAddress || ''\n        }`\n      );\n    }\n  }\n\n  return (\n    <tr\n      role=\"button\"\n      tabIndex={0}\n      onClick={handleClick}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') handleClick();\n      }}\n      className={`search-result-item ${isSupported ? 'supported' : 'limited'}`}\n    >\n      <td className=\"token-icon-cell\">\n        {icon ? (\n          <img \n            src={icon} \n            alt={`${symbol} logo`} \n            className=\"token-icon\"\n            onError={(e) => {\n              e.currentTarget.style.display = 'none';\n              const fallback = e.currentTarget.nextElementSibling as HTMLElement;\n              if (fallback) fallback.style.display = 'flex';\n            }}\n          />\n        ) : null}\n        <div className={`token-fallback ${icon ? 'hidden' : ''}`}>\n          {symbol?.[0]?.toUpperCase()}\n        </div>\n      </td>\n      <td className=\"token-info-cell\">\n        <div className=\"token-info\">\n          <div className=\"token-main\">\n            <strong className=\"token-symbol\">{symbol}</strong>\n            {!isSupported && (\n              <span className=\"limited-badge\">Limited</span>\n            )}\n          </div>\n          <span className=\"token-name\">{name}</span>\n        </div>\n      </td>\n      <td className=\"price-cell\">\n        <span className=\"price-value\">{formatUsd(priceUsd)}</span>\n      </td>\n      <td className=\"liquidity-cell\">\n        <span className=\"liq-value\">{formatUsd(liqUsd)}</span>\n      </td>\n      <td className=\"volume-cell\">\n        <span className=\"vol-value\">{formatUsd(vol24hUsd)}</span>\n      </td>\n      <td className=\"chains-cell\">\n        <div className=\"chain-icons\" title={(chainIcons || []).join(', ')}>\n          {displayedChains.map((c, i) => {\n            const url = CHAIN_TO_ICON[c];\n            if (!url) return null;\n            return (\n              <img\n                key={c}\n                src={url}\n                alt={c}\n                className=\"chain-icon\"\n                style={{ zIndex: displayedChains.length - i }}\n              />\n            );\n          })}\n          {chainCount && chainCount > displayedChains.length && (\n            <span className=\"chain-more\">+{chainCount - displayedChains.length}</span>\n          )}\n        </div>\n      </td>\n      <td className=\"meta-cell\">\n        <div className=\"meta-info\">\n          <span className=\"pool-count-chip\">{poolCount} pools</span>\n          <span className=\"provider-badge\" title={`Data provider: ${provider}`}>\n            {provider}\n          </span>\n        </div>\n      </td>\n    </tr>\n  );\n}\n"
        }
    ]
}