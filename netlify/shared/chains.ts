/**
 * Chain to GeckoTerminal network mapping
 * Auto-generated from GT API data on 2025-08-17T18:36:01.739Z
 * 
 * Total networks: 100
 * Total DEXes: 1127
 */

// Priority networks (high volume/usage)
export const PRIORITY_CHAINS = [
  'ethereum',
  'bsc',
  'polygon',
  'avalanche',
  'fantom',
  'arbitrum',
  'optimism',
  'solana',
  'zksync',
  'linea',
  'base',
  'scroll',
] as const;

// Complete chain to GT network mapping
export const CHAIN_TO_GT_NETWORK: Record<string, string> = {
  arbitrum: 'arbitrum', // Priority
  avalanche: 'avax', // Priority
  base: 'base', // Priority
  bsc: 'bsc', // Priority
  ethereum: 'eth', // Priority
  fantom: 'ftm', // Priority
  linea: 'linea', // Priority
  optimism: 'optimism', // Priority
  polygon: 'polygon_pos', // Priority
  scroll: 'scroll', // Priority
  solana: 'solana', // Priority
  zksync: 'zksync', // Priority
  alveychain: 'alveychain',
  aptos: 'aptos',
  arbitrumnova: 'arbitrum_nova',
  astr: 'astr',
  aurora: 'aurora',
  bch: 'bch',
  beam: 'beam',
  bitgert: 'bitgert',
  bitkub: 'bitkub_chain',
  bitrock: 'bitrock',
  boba: 'boba',
  bttc: 'bttc',
  canto: 'canto',
  celo: 'celo',
  cfx: 'cfx',
  core: 'core',
  cronos: 'cro',
  defimetachain: 'defimetachain',
  dfk: 'dfk',
  dogechain: 'dogechain',
  ela: 'ela',
  elysium: 'elysium',
  enuls: 'enuls',
  eosevm: 'eos-evm',
  etc: 'ethereum_classic',
  ethw: 'ethw',
  evmos: 'evmos',
  exosama: 'exosama',
  filecoin: 'filecoin',
  findora: 'findora',
  flare: 'flare',
  fuse: 'fuse',
  gnosis: 'xdai',
  godwoken: 'godwoken',
  harmony: 'one',
  hedera: 'hedera-hashgraph',
  humanode: 'humanode',
  hypranetwork: 'hypra-network',
  iotx: 'iotx',
  kai: 'kai',
  kaia: 'kaia',
  kava: 'kava',
  kcc: 'kcc',
  lightlink: 'lightlink-phoenix',
  loopnetwork: 'loopnetwork',
  manta: 'manta-pacific',
  mantle: 'mantle',
  metis: 'metis',
  milkada: 'milkada',
  mode: 'mode',
  moonbeam: 'glmr',
  moonriver: 'movr',
  mtr: 'mtr',
  multivac: 'multivac',
  mxczkevm: 'mxc-zkevm',
  neonevm: 'neon-evm',
  nrg: 'nrg',
  oasis: 'oasis',
  oasys: 'oasys',
  onus: 'onus',
  opbnb: 'opbnb',
  platon: 'platon_network',
  polygonzkevm: 'polygon-zkevm',
  pulsechain: 'pulsechain',
  rollux: 'rollux',
  ronin: 'ronin',
  sdn: 'sdn',
  sei: 'sei-network',
  sepolia: 'sepolia-testnet',
  shibarium: 'shibarium',
  shimmerevm: 'shimmerevm',
  songbird: 'songbird',
  starknet: 'starknet-alpha',
  stepnetwork: 'step-network',
  sui: 'sui-network',
  sxn: 'sxn',
  tenet: 'tenet',
  thundercore: 'thundercore',
  tlos: 'tlos',
  tombchain: 'tombchain',
  tomochain: 'tomochain',
  ton: 'ton',
  ultron: 'ultron',
  velas: 'velas',
  wan: 'wan',
  wemix: 'wemix',
  xdc: 'xdc',
  zkfair: 'zkfair',
};

export const SUPPORTED_GT_NETWORKS = new Set(Object.values(CHAIN_TO_GT_NETWORK));

export type GTNetwork = (typeof CHAIN_TO_GT_NETWORK)[keyof typeof CHAIN_TO_GT_NETWORK];

export function toGTNetwork(chain: string): GTNetwork | null {
  return (CHAIN_TO_GT_NETWORK as Record<string, GTNetwork>)[chain] ?? null;
}

export function isPriorityChain(chain: string): boolean {
  return PRIORITY_CHAINS.includes(chain as any);
}

// Network metadata for display purposes
export const NETWORK_INFO: Record<string, { name: string; platformId?: string }> = {
  alveychain: { name: 'AlveyChain', platformId: 'alveychain' },
  aptos: { name: 'Aptos', platformId: 'aptos' },
  arbitrum: { name: 'Arbitrum', platformId: 'arbitrum-one' },
  arbitrumnova: { name: 'Arbitrum Nova', platformId: 'arbitrum-nova' },
  astr: { name: 'Astar', platformId: 'astar' },
  aurora: { name: 'Aurora', platformId: 'aurora' },
  avalanche: { name: 'Avalanche', platformId: 'avalanche' },
  base: { name: 'Base', platformId: 'base' },
  bch: { name: 'SmartBCH', platformId: 'smartbch' },
  beam: { name: 'Beam', platformId: 'beam' },
  bitgert: { name: 'Bitgert', platformId: 'bitgert' },
  bitkub: { name: 'KUB', platformId: 'bitkub-chain' },
  bitrock: { name: 'Bitrock', platformId: 'bitrock' },
  boba: { name: 'Boba Network', platformId: 'boba' },
  bsc: { name: 'BNB Chain', platformId: 'binance-smart-chain' },
  bttc: { name: 'BitTorrent', platformId: 'bittorrent' },
  canto: { name: 'Canto', platformId: 'canto' },
  celo: { name: 'CELO', platformId: 'celo' },
  cfx: { name: 'Conflux', platformId: 'conflux' },
  core: { name: 'Core', platformId: 'core' },
  cronos: { name: 'Cronos', platformId: 'cronos' },
  defimetachain: { name: 'DefiMetaChain', platformId: 'defichain-evm' },
  dfk: { name: 'DFK Chain', platformId: 'defi-kingdoms-blockchain' },
  dogechain: { name: 'Dogechain', platformId: 'dogechain' },
  ela: { name: 'Elastos', platformId: 'elastos' },
  elysium: { name: 'Elysium', platformId: 'elysium' },
  enuls: { name: 'ENULS', platformId: 'enuls' },
  eosevm: { name: 'EOS EVM', platformId: 'eos-evm' },
  etc: { name: 'Ethereum Classic', platformId: 'ethereum-classic' },
  ethereum: { name: 'Ethereum', platformId: 'ethereum' },
  ethw: { name: 'EthereumPOW', platformId: 'ethereumpow' },
  evmos: { name: 'Evmos', platformId: 'evmos' },
  exosama: { name: 'Exosama', platformId: 'exosama' },
  fantom: { name: 'Fantom', platformId: 'fantom' },
  filecoin: { name: 'Filecoin', platformId: 'filecoin' },
  findora: { name: 'Findora', platformId: 'findora' },
  flare: { name: 'Flare', platformId: 'flare-network' },
  fuse: { name: 'Fuse', platformId: 'fuse' },
  gnosis: { name: 'Gnosis XDAI', platformId: 'xdai' },
  godwoken: { name: 'Godwoken', platformId: 'godwoken' },
  harmony: { name: 'Harmony', platformId: 'harmony-shard-0' },
  hedera: { name: 'Hedera Hashgraph', platformId: 'hedera-hashgraph' },
  humanode: { name: 'Humanode', platformId: 'humanode' },
  hypranetwork: { name: 'Hypra Network', platformId: 'hypra-network' },
  iotx: { name: 'IOTEX', platformId: 'iotex' },
  kai: { name: 'Kardiachain', platformId: 'kardiachain' },
  kaia: { name: 'Kaia', platformId: 'klay-token' },
  kava: { name: 'Kava', platformId: 'kava' },
  kcc: { name: 'Kucoin Community Chain', platformId: 'kucoin-community-chain' },
  lightlink: { name: 'LightLink Phoenix', platformId: 'lightlink' },
  linea: { name: 'Linea', platformId: 'linea' },
  loopnetwork: { name: 'LoopNetwork', platformId: undefined },
  manta: { name: 'Manta Pacific', platformId: 'manta-pacific' },
  mantle: { name: 'Mantle', platformId: 'mantle' },
  metis: { name: 'Metis', platformId: 'metis-andromeda' },
  milkada: { name: 'Milkomeda Cardano', platformId: 'milkomeda-cardano' },
  mode: { name: 'Mode', platformId: 'mode' },
  moonbeam: { name: 'Moonbeam', platformId: 'moonbeam' },
  moonriver: { name: 'Moonriver', platformId: 'moonriver' },
  mtr: { name: 'Meter', platformId: 'meter' },
  multivac: { name: 'MultiVAC', platformId: 'multivac' },
  mxczkevm: { name: 'MXC zkEVM', platformId: 'moonchain' },
  neonevm: { name: 'Neon EVM', platformId: 'neon-evm' },
  nrg: { name: 'Energi', platformId: 'energi' },
  oasis: { name: 'Oasis Emerald', platformId: 'oasis' },
  oasys: { name: 'Oasys', platformId: 'oasys' },
  onus: { name: 'ONUS', platformId: 'onus' },
  opbnb: { name: 'opBNB', platformId: 'opbnb' },
  optimism: { name: 'Optimism', platformId: 'optimistic-ethereum' },
  platon: { name: 'PlatON Network', platformId: 'platon-network' },
  polygon: { name: 'Polygon POS', platformId: 'polygon-pos' },
  polygonzkevm: { name: 'Polygon zkEVM', platformId: 'polygon-zkevm' },
  pulsechain: { name: 'Pulsechain', platformId: 'pulsechain' },
  rollux: { name: 'Rollux', platformId: 'rollux' },
  ronin: { name: 'Ronin', platformId: 'ronin' },
  scroll: { name: 'Scroll', platformId: 'scroll' },
  sdn: { name: 'Shiden', platformId: 'shiden network' },
  sei: { name: 'Sei Network', platformId: 'sei-network' },
  sepolia: { name: 'Sepolia Testnet', platformId: undefined },
  shibarium: { name: 'Shibarium', platformId: 'shibarium' },
  shimmerevm: { name: 'ShimmerEVM', platformId: 'shimmer_evm' },
  solana: { name: 'Solana', platformId: 'solana' },
  songbird: { name: 'Songbird', platformId: 'songbird' },
  starknet: { name: 'Starknet', platformId: 'starknet' },
  stepnetwork: { name: 'Step Network', platformId: 'step-network' },
  sui: { name: 'Sui Network', platformId: 'sui' },
  sxn: { name: 'SX Network', platformId: 'sx-network' },
  tenet: { name: 'Tenet', platformId: 'tenet' },
  thundercore: { name: 'ThunderCore', platformId: 'thundercore' },
  tlos: { name: 'Telos', platformId: 'telos' },
  tombchain: { name: 'Tombchain', platformId: 'tombchain' },
  tomochain: { name: 'Viction', platformId: 'tomochain' },
  ton: { name: 'TON', platformId: 'the-open-network' },
  ultron: { name: 'Ultron', platformId: 'ultron' },
  velas: { name: 'Velas', platformId: 'velas' },
  wan: { name: 'Wanchain', platformId: 'wanchain' },
  wemix: { name: 'WEMIX', platformId: 'wemix-network' },
  xdc: { name: 'XDC', platformId: 'xdc-network' },
  zkfair: { name: 'ZKFair', platformId: 'zkfair' },
  zksync: { name: 'ZkSync', platformId: 'zksync' },
};
